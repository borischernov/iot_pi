function str_addr(addr)
    res = string.format("%02x", addr:byte(1)).."-"
    for i=7,2,-1 do res = res .. string.format("%02x", addr:byte(i)) end
    return res
end

function send_data(addr, temp)
    conn=net.createConnection(net.TCP, 0) 
    conn:on("receive", function(conn, payload) print(payload) end)
    conn:on("sent",function(conn)
        print("Closing connection")
        conn:close()
    end)
    conn:on("disconnection", function(conn)
        print("Got disconnection...")
    end)
    conn:on("connection", function() 
        print("Connected")
        conn:send("GET /api/set_data/"..addr.."/"..temp.." HTTP/1.1\r\n") 
        conn:send("Host: <%= @params['host'] %>\r\n") 
        conn:send("Accept: */*\r\n") 
        conn:send("\r\n")
    end)
    conn:connect(<%= @params['port'] %>,"<%= @params['host'] %>") 
end

function send_sensors_data()
    t = require("ds18b20")
    
    -- ESP-01 GPIO Mapping
    gpio0 = 3
    gpio2 = 4
    
    t.setup(gpio0)
    addrs = t.addrs()
    if (addrs ~= nil) then
      print("Total DS18B20 sensors: "..table.getn(addrs))
      for i,addr in ipairs(addrs) do
        temp = t.read(addr)
        print("Temperature: "..str_addr(addr).." : "..temp.."'C")
        send_data(str_addr(addr), temp)
      end
    end
end

print("Setting up WIFI...")
wifi.setmode(wifi.STATION)
--modify according your wireless router settings
wifi.sta.config("<%= @params['ssid'] %>","<%= @params['password'] %>")
wifi.sta.connect()
tmr.alarm(1, 60000, 1, function() 
    if wifi.sta.getip()== nil then 
        print("IP unavaiable, Waiting...") 
    else 
        print("Config done, IP is "..wifi.sta.getip())
        send_sensors_data()        
    end
end)

